using System;

namespace Rogue
{
    class Map
    {
        private char[,] mapData = new char[,]
        {
            { '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#' },
            { '#', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'M', '.', '.', '.', '.', '.', '.', '.', '.', '.', '#' },
            { '#', '.', '#', '#', '#', '#', '.', '#', '#', '#', '#', '#', '.', '#', '#', '#', '#', '#', '.', '#', '#' },
            { '#', '.', '#', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '#', '.', '.', '.', '#' },
            { '#', '.', '#', '.', '#', '#', '#', '.', '#', '#', '#', '#', '#', '#', '.', '#', '#', '#', '.', '.', '#' },
            { '#', '.', '.', '.', '#', '.', '.', '.', '.', '.', '.', '.', '.', '#', '.', '.', '.', '.', '.', '.', '#' },
            { '#', '.', '.', '.', '#', '.', '.', '.', '.', '.', '.', '.', '.', '#', '.', '.', '.', '.', '.', '.', '#' },
            { '#', '.', '.', '.', '#', '.', '.', '.', '.', '.', '.', '.', '.', '#', '.', '.', '.', '.', '.', '.', '#' },
            { '#', '.', '.', '.', '#', '.', '.', '.', '.', '.', '.', '.', '.', '#', '.', '.', '.', '.', '.', '.', '#' },
            { '#', '.', '.', '.', '#', '.', '.', '.', '.', '.', '.', '.', '.', '#', '.', '.', '.', '.', '.', '.', '#' },
            { '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#' }
        };





        public int MapHeight => mapData.GetLength(0);

        public void Draw()
        {
            for (int y = 0; y < mapData.GetLength(0); y++)
            {
                for (int x = 0; x < mapData.GetLength(1); x++)
                {
                    Console.SetCursorPosition(x, y);
                    Console.Write(mapData[y, x]);
                }
            }
        }

        public bool IsWalkable(int x, int y)
        {
            if (x < 0 || x >= mapData.GetLength(1) || y < 0 || y >= mapData.GetLength(0))
            {
                return false; 
            }
            return mapData[y, x] == '.';
        }
        public void UpdateCoin(Coin coin)
        {
            if (coin.X >= 0 && coin.X < mapData.GetLength(1) && coin.Y >= 0 && coin.Y < mapData.GetLength(0))
            {
                mapData[coin.Y, coin.X] = '.';
            }
        }
    }
}
